import{lerp_default as t}from"./chunk-3XB747MK.js";import{intersection_default as s}from"./chunk-PXM6JQB5.js";import{mask_default as i}from"./chunk-KJ7TQTMI.js";import{scrollbar_default as h}from"./chunk-4SBXN5EH.js";import{speed_default as e}from"./chunk-2P7QSVRG.js";import{sticky_default as r}from"./chunk-5UDG5ESY.js";import"./chunk-ZXU3EN47.js";var o=class{constructor({root:s=document.body,lerp:i=.25,offsets:h=[0,0],plugins:e=[]}){this._lerp=.25,this._slowLerp=.1,this._offsets=[0,0,0,0],this._triggers=new Map,this._plugins=[],this._progressListeners=[],this._saveScroll=()=>{window.scrollTo(this.current.x.getCurrent(),this.current.y.getCurrent())},this._onScroll=t=>{t.preventDefault(),this.current.y.setTarget(window.scrollY,this._lerp)},this._onResize=()=>{document.documentElement.style.setProperty("--vh",.01*window.innerHeight+"px"),document.documentElement.style.height=document.body.scrollHeight+"px",this.current.x.setBounds(0,this._root.offsetWidth-window.innerWidth),this.current.y.setBounds(0,this._root.offsetHeight-window.innerHeight),this._applyScroll(),this._updateTriggers()},this._applyScroll=()=>{const t=this.getCurrent();document.body.style.transform=`translate3d(${t.x}px, ${-t.y}px, 0)`,this._progressListeners.forEach((t=>t(this.getProgress(),this.getCurrent(),this.getBounds())))},this._handleIntersection=t=>{t.forEach((t=>{const s=this._triggers.get(t.target);s&&s.forEach((s=>{s.active=t.isIntersecting,s.entry=t}))}))},this._updateTriggers=()=>{this._triggers.forEach((t=>{t.forEach((t=>{(t.active||t.forever)&&t.callback(t)(this)}))}))},this._root=s,document.documentElement.style.height=document.body.scrollHeight+"px",document.body.style.position="fixed",this._lerp=i,this._offsets=this._formatOffset(h),this.current={x:new t(window.scrollX,i),y:new t(window.scrollY,i)},this._onResize(),this._applyScroll(),window.addEventListener("scroll",this._onScroll),window.addEventListener("resize",this._onResize),window.addEventListener("beforeunload",this._saveScroll),new ResizeObserver(this._onResize).observe(this._root),this._observer=new IntersectionObserver(this._handleIntersection),requestAnimationFrame(this._animate.bind(this)),this._plugins=e,this._plugins.forEach((t=>t(this))),document.body.style.visibility="visible"}_animate(){(this.current.x.shouldTick()||this.current.y.shouldTick())&&(this.current.x.tick(),this.current.y.tick(),this._applyScroll(),this._updateTriggers()),requestAnimationFrame(this._animate.bind(this))}_formatOffset(t){return"number"==typeof t?[t,t,t,t]:Array.isArray(t)&&2===t.length?[t[0],t[1],t[0],t[1]]:t}getRoot(){return this._root}getOffsets(){return this._offsets}getProgress(){return{x:this.current.x.getProgress(),y:this.current.y.getProgress()}}getCurrent(){return{x:this.current.x.getCurrent(),y:this.current.y.getCurrent()}}getTarget(){return{x:this.current.x.getTarget(),y:this.current.y.getTarget()}}getBounds(){return{x:this.current.x.getBounds(),y:this.current.y.getBounds()}}scrollXTo(t,{offset:s=0,lerp:i=this._slowLerp}={}){this.current.x.setTarget("number"==typeof t?t+s:t.getBoundingClientRect().left+this.current.x.getCurrent()+s,i)}scrollYTo(t,{offset:s=0,lerp:i=this._slowLerp}={}){this.current.y.setTarget("number"==typeof t?t+s:t.getBoundingClientRect().top+this.current.y.getCurrent()+s,i)}trigger(t,s,i){const h={element:t,active:!1,forever:i?.forever,entry:null,opts:{...i,offset:this._formatOffset(i?.offset)},callback:s};this._observer.observe(t),this._triggers.set(t,this._triggers.get(t)||[]),this._triggers.get(t)?.push(h),h.callback(h)(this)}onProgress(t){this._progressListeners.push(t)}};export{o as default,s as intersection,i as mask,h as scrollbar,e as speed,r as sticky};